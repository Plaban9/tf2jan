*** Settings ***
Resource          ../operator_resources.txt
Resource          ../../CLI/cli_resources.txt
Resource          ../../CLI/dtcli/dtcli_resources.txt
Library           ../../../lib/CLI/dtingest/DTCPLib.py
Library           DateTime

*** Keywords ***
RUNit
    [Arguments]    ${params}    ${timeout}=10    ${cliConfig}=${EMPTY}    ${validateData}=${True}    ${testFaultTolerance}=${False}    ${testDynamicScaling}=${False}
    ...    ${filefilter}=${EMPTY}
    Append To File    ${dtcli_log}    ${TEST_NAME} ${SPACE}${:}${SPACE}
    #>>>>>>> Launch file-copy app
    #Create conf for apexcli 'launch' command
    ${cliConfig}=    Catenate    SEPARATOR=${SPACE}    -exactMatch ${APPLICATION_NAME}    ${cliConfig}
    #Create properties file with operator params
    ${confFile}=    Create Properties File From Dict    ${params}
    #Update conf for apexcli 'launch' command with properties file path
    ${cliConfig}=    Catenate    SEPARATOR=${SPACE}    ${cliConfig}    -conf ${confFile}
    #Launch application in Apex CLI
    ${app_id}    ${cmd_stdout}=    Launch App    ${app_pkg}    ${cliConfig}    ${APPLICATION_NAME}
    Set Test Variable    ${app_id}
    #>>>>>>> Fault tolerance test
    Run Keyword If    ${testFaultTolerance}==${True}    Kill Container Test    ${app_id}    ${OPERATOR_NAME}    wait=30s
    #>>>>>>> Dynamic Scalability test
    Run Keyword If    ${testDynamicScaling}==${True}    Check Dynamic Scalability    ${app_id}    ${OPERATOR_NAME}    ${OPERATOR_NAME}    partitionCount
    ...    10
    #>>>>>>> Some basic validation
    Check App State    ${app_id}    expected=RUNNING
    Check Operator Property Values    ${app_id}    ${OPERATOR_NAME}    ${params}
    #>>>>>>> Actual data validation
    Run Keyword If    ${validateData}==${True}    Validate Data    ${app_id}    ${params}    ${timeout}    ${testFaultTolerance}
    ...    ${testDynamicScaling}    ${filefilter}

Validate Data
    [Arguments]    ${app_id}    ${params}    ${timeout}    ${testFaultTolerance}=${False}    ${testDynamicScaling}=${False}    ${filefilter}=${EMPTY}
    #Poll for app status
    ${status}=    Poll For App Status Using Tuples Count    ${app_id}    ${timeout}    ${testFaultTolerance}    ${testDynamicScaling}    #timeout is in minutes
    #Get source metadata
    ${source}=    Get From Dictionary    ${params}    dt.operator.read.prop.directory
    ${source_meta}=    Get Size Metadata    ${source}    ${dtserver}    ${sshuser}    ${sshkey}    1
    ...    file_filter=${filefilter}
    #Get dest metadata
    ${dest}=    Get From Dictionary    ${params}    dt.operator.write.prop.filePath
    ${dest_meta}=    Get Size Metadata    ${dest}    ${dtserver}    ${sshuser}    ${sshkey}    0
    #Comparing Source and Destination files
    Dictionaries Should Be Equal    ${source_meta}    ${dest_meta}    msg=DICTIONARIES DO NOT MATCH !!

old_RUNit
    [Arguments]    ${params}    ${timeout}=10    ${cliConfig}=${EMPTY}    ${kill}=${True}    ${negative}=${False}    ${validate}=${True}
    Append To File    ${dtcli_log}    ${TEST_NAME} ${SPACE}${:}${SPACE}
    #>>>>>>> Get source metadata
    ${source}=    Get From Dictionary    ${params}    dt.operator.read.prop.directory
    ${source_meta}=    Get Size Metadata    ${source}    ${dtserver}    ${sshuser}    ${sshkey}    1
    #>>>>>>> Launch file-copy app
    #Create conf for apexcli 'launch' command
    ${cliConfig}=    Catenate    SEPARATOR=${SPACE}    -exactMatch ${APPLICATION_NAME}    ${cliConfig}
    #Create properties file with operator params
    ${confFile}=    Create Properties File From Dict    ${params}
    #Update conf for apexcli 'launch' command with properties file path
    ${cliConfig}=    Catenate    SEPARATOR=${SPACE}    ${cliConfig}    -conf ${confFile}
    #Launch application in Apex CLI
    ${app_id}    ${cmd_stdout}=    Launch App    ${app_pkg}    ${cliConfig}    ${APPLICATION_NAME}
    Set Test Variable    ${app_id}
    #>>>>>>> Validate launched app details
    Run Keyword If    ${validate}==${True}    Validate Details    ${app_id}    ${params}
    #>>>>>>> Polling for app status
    ${status}=    Poll For App Status Using Tuples Count    ${app_id}    ${timeout}    #timeout is in minutes
    #>>>>>>> Getting dest metadata
    ${dest}=    Get From Dictionary    ${params}    dt.operator.write.prop.filePath
    ${dest_meta}=    Get Size Metadata    ${dest}    ${dtserver}    ${sshuser}    ${sshkey}    0
    #>>>>>>> Comparing Source and Destination files
    Dictionaries Should Be Equal    ${source_meta}    ${dest_meta}    msg=DICTIONARIES DO NOT MATCH !!

Check Time Difference Between Log Lines
    [Arguments]    ${lines}    ${regex}    ${expected_td}
    ${filtered_lines}=    Get Lines Containing String    ${lines}    ${regex}
    @{lines}=    Split To Lines    ${filtered_lines}
    #For line no. 1
    ${line1}=    Get From List    ${lines}    0
    ${match}    ${dt1}=    Should Match Regexp    ${line1}    ^([^ ]+ [^ ]+)
    #For line no. 2
    ${line2}=    Get From List    ${lines}    1
    ${match}    ${dt2}=    Should Match Regexp    ${line2}    ^([^ ]+ [^ ]+)
    ${diff}=    Subtract Date From Date    ${dt2}    ${dt1}    exclude_millis=${True}
    ${diff}=    Convert To Integer    ${diff}
    ${expected_td}=    Convert To Integer    ${expected_td}
    Should Be Equal    ${diff}    ${expected_td}
